import { KnownDataStatusCode } from '../../request/index.js';
import '../../packet/struct/chat.js';
import { structToNormalChannelInfo } from '../../packet/struct/wrap/channel.js';
import '../../util/json-util.js';
import { structToChannelUserInfo } from '../../packet/struct/wrap/user.js';
import { Long as bson_9 } from '../../node_modules/bson/dist/bson.browser.esm.js';

class TalkNormalChannelSession {
    constructor(channel, session) {
        this._channel = channel;
        this._session = session;
        this.currentMsgId = 0;
    }
    get session() {
        return this._session;
    }
    async chatON() {
        const res = await this._session.request('CHATONROOM', {
            'chatId': this._channel.channelId,
            'token': bson_9.ZERO,
            'opt': bson_9.ZERO,
        });
        if (res.status !== KnownDataStatusCode.SUCCESS)
            return { success: false, status: res.status };
        return { success: true, status: res.status, result: res };
    }
    async inviteUsers(users) {
        const { status } = await this._session.request('ADDMEM', {
            'chatId': this._channel.channelId,
            'memberIds': users.map((user) => user.userId),
        });
        return {
            success: status === KnownDataStatusCode.SUCCESS,
            status,
        };
    }
    async getLatestChannelInfo() {
        const res = await this._session.request('CHATINFO', {
            'chatId': this._channel.channelId,
        });
        if (res.status !== KnownDataStatusCode.SUCCESS)
            return { success: false, status: res.status };
        return {
            success: true,
            status: res.status,
            result: structToNormalChannelInfo(res.chatInfo),
        };
    }
    async getLatestUserInfo(...channelUsers) {
        const res = await this._session.request('MEMBER', {
            'chatId': this._channel.channelId,
            'memberIds': channelUsers.map((user) => user.userId),
        });
        if (res.status !== KnownDataStatusCode.SUCCESS)
            return { success: false, status: res.status };
        const result = res.members.map((member) => structToChannelUserInfo(member));
        return { success: true, status: res.status, result };
    }
    async getAllLatestUserInfo() {
        const res = await this._session.request('GETMEM', {
            'chatId': this._channel.channelId,
        });
        if (res.status !== KnownDataStatusCode.SUCCESS)
            return { success: false, status: res.status };
        const result = res.members.map((member) => structToChannelUserInfo(member));
        return { success: true, status: res.status, result };
    }
}

export { TalkNormalChannelSession };
//# sourceMappingURL=talk-normal-channel-session.js.map
