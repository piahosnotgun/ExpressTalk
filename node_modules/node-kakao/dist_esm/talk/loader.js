import { NormalChannelInfo } from '../channel/channel-info.js';
import '../channel/meta.js';
import '../openlink/index.js';
import { TalkMemoryChannelDataStore } from './channel/common.js';
import '../chat/attachment/post.js';
import '../chat/chat-type.js';
import '../util/json-util.js';
import '../chat/feed/feed-type.js';
import '../packet/struct/chat.js';
import '../user/user-type.js';
import { TalkMemoryChatListStore } from './chat/store.js';
import '../node_modules/bson/dist/bson.browser.esm.js';
import '../request/index.js';
import '../stream/index.js';
import 'buffer';
import '../packet/chat/kickout.js';
import '../node_modules/eventemitter3/index.js';
import { OpenChannelInfo } from '../openlink/open-channel-info.js';

const TalkInMemoryDataLoader = {
    async loadChatListStore() {
        return {
            shouldUpdate: false,
            value: new TalkMemoryChatListStore(300)
        };
    },
    async loadNormalChannelStore() {
        return {
            shouldUpdate: true,
            value: new TalkMemoryChannelDataStore(NormalChannelInfo.createPartial({}))
        };
    },
    async loadOpenChannelStore() {
        return {
            shouldUpdate: true,
            value: new TalkMemoryChannelDataStore(OpenChannelInfo.createPartial({}))
        };
    }
};

export { TalkInMemoryDataLoader };
//# sourceMappingURL=loader.js.map
