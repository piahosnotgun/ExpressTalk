class PacketAssembler {
    constructor(dataCodec) {
        this._currentId = 1;
        this._dataCodec = dataCodec;
    }
    construct(method, data) {
        const packetData = this._dataCodec.encode(data);
        return {
            header: {
                id: (this._currentId = (this._currentId + 1) % 100000),
                method,
                status: 0,
            },
            data: packetData,
        };
    }
    deconstruct(packet) {
        if (!this._dataCodec.canDecode(packet.data[0]))
            throw new Error(`Cannot decode dataType ${packet.data[0]}`);
        return this._dataCodec.decode(packet.data[1]);
    }
}

export { PacketAssembler };
//# sourceMappingURL=packet-assembler.js.map
