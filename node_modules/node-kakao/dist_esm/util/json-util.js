import { Long as bson_9 } from '../node_modules/bson/dist/bson.browser.esm.js';
import '../node_modules/lossless-json/dist/lossless-json.js';
import { l as losslessJson } from '../_virtual/lossless-json.js_commonjs-module';

var JsonUtil;
(function (JsonUtil) {
    const bsonLongReviver = (key, value) => {
        if (typeof value === 'object' && value && 'isLosslessNumber' in value) {
            try {
                return value.valueOf();
            }
            catch (e) {
                return bson_9.fromString(value.toString());
            }
        }
        return value;
    };
    const bsonLongReplacer = (key, value) => {
        if (typeof value === 'bigint' || bson_9.isLong(value)) {
            return new losslessJson.exports.LosslessNumber(value.toString());
        }
        return value;
    };
    function parseLoseless(obj) {
        return losslessJson.exports.parse(obj, bsonLongReviver);
    }
    JsonUtil.parseLoseless = parseLoseless;
    function stringifyLoseless(obj) {
        return losslessJson.exports.stringify(obj, bsonLongReplacer);
    }
    JsonUtil.stringifyLoseless = stringifyLoseless;
})(JsonUtil || (JsonUtil = {}));

export { JsonUtil };
//# sourceMappingURL=json-util.js.map
