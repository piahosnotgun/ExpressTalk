/*!
 * hash-wasm (https://www.npmjs.com/package/hash-wasm)
 * (c) Dani Biro
 * @license MIT
 */

!function(A,I){"object"==typeof exports&&"undefined"!=typeof module?I(exports):"function"==typeof define&&define.amd?define(["exports"],I):I((A="undefined"!=typeof globalThis?globalThis:A||self).hashwasm=A.hashwasm||{})}(this,(function(A){"use strict";function I(A,I,i,g){return new(i||(i=Promise))((function(B,Q){function C(A){try{o(g.next(A))}catch(A){Q(A)}}function E(A){try{o(g.throw(A))}catch(A){Q(A)}}function o(A){var I;A.done?B(A.value):(I=A.value,I instanceof i?I:new i((function(A){A(I)}))).then(C,E)}o((g=g.apply(A,I||[])).next())}))}class i{constructor(){this.mutex=Promise.resolve()}lock(){let A=()=>{};return this.mutex=this.mutex.then((()=>new Promise(A))),new Promise((I=>{A=I}))}dispatch(A){return I(this,void 0,void 0,(function*(){const I=yield this.lock();try{return yield Promise.resolve(A())}finally{I()}}))}}var g;const B="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:global,Q=null!==(g=B.Buffer)&&void 0!==g?g:null,C=B.TextEncoder?new B.TextEncoder:null;function E(A,I){return(15&A)+(A>>6|A>>3&8)<<4|(15&I)+(I>>6|I>>3&8)}const o="a".charCodeAt(0)-10,c="0".charCodeAt(0);function e(A,I,i){let g=0;for(let B=0;B<i;B++){let i=I[B]>>>4;A[g++]=i>9?i+o:i+c,i=15&I[B],A[g++]=i>9?i+o:i+c}return String.fromCharCode.apply(null,A)}const t=null!==Q?A=>{if("string"==typeof A){const I=Q.from(A,"utf8");return new Uint8Array(I.buffer,I.byteOffset,I.length)}if(Q.isBuffer(A))return new Uint8Array(A.buffer,A.byteOffset,A.length);if(ArrayBuffer.isView(A))return new Uint8Array(A.buffer,A.byteOffset,A.byteLength);throw new Error("Invalid data type!")}:A=>{if("string"==typeof A)return C.encode(A);if(ArrayBuffer.isView(A))return new Uint8Array(A.buffer,A.byteOffset,A.byteLength);throw new Error("Invalid data type!")},a="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",D=new Uint8Array(256);for(let A=0;A<a.length;A++)D[a.charCodeAt(A)]=A;function w(A){const I=function(A){let I=Math.floor(.75*A.length);const i=A.length;return"="===A[i-1]&&(I-=1,"="===A[i-2]&&(I-=1)),I}(A),i=A.length,g=new Uint8Array(I);let B=0;for(let I=0;I<i;I+=4){const i=D[A.charCodeAt(I)],Q=D[A.charCodeAt(I+1)],C=D[A.charCodeAt(I+2)],E=D[A.charCodeAt(I+3)];g[B]=i<<2|Q>>4,B+=1,g[B]=(15&Q)<<4|C>>2,B+=1,g[B]=(3&C)<<6|63&E,B+=1}return g}const n=16384,h=new i,F=new Map;function r(A,i){return I(this,void 0,void 0,(function*(){let g=null,B=null,Q=!1;if("undefined"==typeof WebAssembly)throw new Error("WebAssembly is not supported in this environment!");const C=()=>new DataView(g.exports.memory.buffer).getUint32(g.exports.STATE_SIZE,!0),o=h.dispatch((()=>I(this,void 0,void 0,(function*(){if(!F.has(A.name)){const I=w(A.data),i=WebAssembly.compile(I);F.set(A.name,i)}const I=yield F.get(A.name);g=yield WebAssembly.instantiate(I,{})})))),c=(A=null)=>{Q=!0,g.exports.Hash_Init(A)},a=A=>{if(!Q)throw new Error("update() called before init()");(A=>{let I=0;for(;I<A.length;){const i=A.subarray(I,I+n);I+=i.length,B.set(i),g.exports.Hash_Update(i.length)}})(t(A))},D=new Uint8Array(2*i),r=(A,I=null)=>{if(!Q)throw new Error("digest() called before init()");return Q=!1,g.exports.Hash_Final(I),"binary"===A?B.slice(0,i):e(D,B,i)},N=A=>"string"==typeof A?A.length<4096:A.byteLength<n;let y=N;switch(A.name){case"argon2":case"scrypt":y=()=>!0;break;case"blake2b":case"blake2s":y=(A,I)=>I<=512&&N(A);break;case"blake3":y=(A,I)=>0===I&&N(A);break;case"xxhash64":case"xxhash3":case"xxhash128":y=()=>!1}return yield(()=>I(this,void 0,void 0,(function*(){g||(yield o);const A=g.exports.Hash_GetBuffer(),I=g.exports.memory.buffer;B=new Uint8Array(I,A,n)})))(),{getMemory:()=>B,writeMemory:(A,I=0)=>{B.set(A,I)},getExports:()=>g.exports,setMemorySize:A=>{g.exports.Hash_SetMemorySize(A);const I=g.exports.Hash_GetBuffer(),i=g.exports.memory.buffer;B=new Uint8Array(i,I,A)},init:c,update:a,digest:r,save:()=>{if(!Q)throw new Error("save() can only be called after init() and before digest()");const I=g.exports.Hash_GetState(),i=C(),B=g.exports.memory.buffer,o=new Uint8Array(B,I,i),c=new Uint8Array(4+i);return function(A,I){const i=I.length>>1;for(let g=0;g<i;g++){const i=g<<1;A[g]=E(I.charCodeAt(i),I.charCodeAt(i+1))}}(c,A.hash),c.set(o,4),c},load:I=>{if(!(I instanceof Uint8Array))throw new Error("load() expects an Uint8Array generated by save()");const i=g.exports.Hash_GetState(),B=C(),o=4+B,c=g.exports.memory.buffer;if(I.length!==o)throw new Error(`Bad state length (expected ${o} bytes, got ${I.length})`);if(!function(A,I){if(A.length!==2*I.length)return!1;for(let i=0;i<I.length;i++){const g=i<<1;if(I[i]!==E(A.charCodeAt(g),A.charCodeAt(g+1)))return!1}return!0}(A.hash,I.subarray(0,4)))throw new Error("This state was written by an incompatible hash implementation");const e=I.subarray(4);new Uint8Array(c,i,B).set(e),Q=!0},calculate:(A,I=null,Q=null)=>{if(!y(A,I))return c(I),a(A),r("hex",Q);const C=t(A);return B.set(C),g.exports.Hash_Calculate(C.length,I,Q),e(D,B,i)},hashLength:i}}))}var N={name:"blake3",data:"",hash:"d713ba4f"};const y=new i;let S=null;function k(A){return!Number.isInteger(A)||A<8||A%8!=0?new Error("Invalid variant! Valid values: 8, 16, ..."):null}A.blake3=function(A,i=256,g=null){if(k(i))return Promise.reject(k(i));let B=null,Q=0;if(null!==g){if(B=t(g),32!==B.length)return Promise.reject(new Error("Key length must be exactly 32 bytes"));Q=32}const C=i/8,E=C;if(null===S||S.hashLength!==C)return function(A,i,g){return I(this,void 0,void 0,(function*(){const I=yield A.lock(),B=yield r(i,g);return I(),B}))}(y,N,C).then((I=>(S=I,32===Q&&S.writeMemory(B),S.calculate(A,Q,E))));try{32===Q&&S.writeMemory(B);const I=S.calculate(A,Q,E);return Promise.resolve(I)}catch(A){return Promise.reject(A)}},A.createBLAKE3=function(A=256,I=null){if(k(A))return Promise.reject(k(A));let i=null,g=0;if(null!==I){if(i=t(I),32!==i.length)return Promise.reject(new Error("Key length must be exactly 32 bytes"));g=32}const B=A/8,Q=B;return r(N,B).then((A=>{32===g&&A.writeMemory(i),A.init(g);const I={init:32===g?()=>(A.writeMemory(i),A.init(g),I):()=>(A.init(g),I),update:i=>(A.update(i),I),digest:I=>A.digest(I,Q),save:()=>A.save(),load:i=>(A.load(i),I),blockSize:64,digestSize:B};return I}))},Object.defineProperty(A,"__esModule",{value:!0})}));
